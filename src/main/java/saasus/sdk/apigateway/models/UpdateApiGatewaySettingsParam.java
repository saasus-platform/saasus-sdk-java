/*
 * SaaSus Smart API Gateway API Schema
 * SaaSus Smart API Gateway API Schema
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package saasus.sdk.apigateway.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import saasus.sdk.apigateway.models.EndpointSettings;
import saasus.sdk.apigateway.models.TenantRoutingType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import saasus.sdk.apigateway.JSON;

/**
 * UpdateApiGatewaySettingsParam
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-26T07:13:20.799263595Z[Etc/UTC]")
public class UpdateApiGatewaySettingsParam {
  public static final String SERIALIZED_NAME_ROLE_ARN = "role_arn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_ROLE_EXTERNAL_ID = "role_external_id";
  @SerializedName(SERIALIZED_NAME_ROLE_EXTERNAL_ID)
  private String roleExternalId;

  public static final String SERIALIZED_NAME_INTERNAL_ENDPOINT_HEALTH_CHECK_PATH = "internal_endpoint_health_check_path";
  @SerializedName(SERIALIZED_NAME_INTERNAL_ENDPOINT_HEALTH_CHECK_PATH)
  private String internalEndpointHealthCheckPath;

  public static final String SERIALIZED_NAME_INTERNAL_ENDPOINT_HEALTH_CHECK_PORT = "internal_endpoint_health_check_port";
  @SerializedName(SERIALIZED_NAME_INTERNAL_ENDPOINT_HEALTH_CHECK_PORT)
  private Integer internalEndpointHealthCheckPort;

  public static final String SERIALIZED_NAME_INTERNAL_ENDPOINT_HEALTH_CHECK_PROTOCOL = "internal_endpoint_health_check_protocol";
  @SerializedName(SERIALIZED_NAME_INTERNAL_ENDPOINT_HEALTH_CHECK_PROTOCOL)
  private String internalEndpointHealthCheckProtocol;

  public static final String SERIALIZED_NAME_INTERNAL_ENDPOINT_HEALTH_STATUS_CODES = "internal_endpoint_health_status_codes";
  @SerializedName(SERIALIZED_NAME_INTERNAL_ENDPOINT_HEALTH_STATUS_CODES)
  private String internalEndpointHealthStatusCodes;

  public static final String SERIALIZED_NAME_SAAS_SUBNET_IDS = "saas_subnet_ids";
  @SerializedName(SERIALIZED_NAME_SAAS_SUBNET_IDS)
  private List<String> saasSubnetIds;

  public static final String SERIALIZED_NAME_SAAS_VPC_ID = "saas_vpc_id";
  @SerializedName(SERIALIZED_NAME_SAAS_VPC_ID)
  private String saasVpcId;

  public static final String SERIALIZED_NAME_DOMAIN_NAME = "domain_name";
  @SerializedName(SERIALIZED_NAME_DOMAIN_NAME)
  private String domainName;

  public static final String SERIALIZED_NAME_SAAS_ALB_ARN = "saas_alb_arn";
  @SerializedName(SERIALIZED_NAME_SAAS_ALB_ARN)
  private String saasAlbArn;

  public static final String SERIALIZED_NAME_ENDPOINT_SETTINGS_LIST = "endpoint_settings_list";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_SETTINGS_LIST)
  private List<EndpointSettings> endpointSettingsList;

  public static final String SERIALIZED_NAME_TENANT_ROUTING_TYPE = "tenant_routing_type";
  @SerializedName(SERIALIZED_NAME_TENANT_ROUTING_TYPE)
  private TenantRoutingType tenantRoutingType;

  public UpdateApiGatewaySettingsParam() {
  }

  public UpdateApiGatewaySettingsParam roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

   /**
   * ARN of the role for SaaSus Platform to AssumeRole
   * @return roleArn
  **/
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public UpdateApiGatewaySettingsParam roleExternalId(String roleExternalId) {
    this.roleExternalId = roleExternalId;
    return this;
  }

   /**
   * External id used by SaaSus when AssumeRole to operate SaaS
   * @return roleExternalId
  **/
  @javax.annotation.Nullable
  public String getRoleExternalId() {
    return roleExternalId;
  }

  public void setRoleExternalId(String roleExternalId) {
    this.roleExternalId = roleExternalId;
  }


  public UpdateApiGatewaySettingsParam internalEndpointHealthCheckPath(String internalEndpointHealthCheckPath) {
    this.internalEndpointHealthCheckPath = internalEndpointHealthCheckPath;
    return this;
  }

   /**
   * The path to be used for health checks on the internal endpoint.
   * @return internalEndpointHealthCheckPath
  **/
  @javax.annotation.Nullable
  public String getInternalEndpointHealthCheckPath() {
    return internalEndpointHealthCheckPath;
  }

  public void setInternalEndpointHealthCheckPath(String internalEndpointHealthCheckPath) {
    this.internalEndpointHealthCheckPath = internalEndpointHealthCheckPath;
  }


  public UpdateApiGatewaySettingsParam internalEndpointHealthCheckPort(Integer internalEndpointHealthCheckPort) {
    this.internalEndpointHealthCheckPort = internalEndpointHealthCheckPort;
    return this;
  }

   /**
   * The port to be used for health checks on the internal endpoint.
   * @return internalEndpointHealthCheckPort
  **/
  @javax.annotation.Nullable
  public Integer getInternalEndpointHealthCheckPort() {
    return internalEndpointHealthCheckPort;
  }

  public void setInternalEndpointHealthCheckPort(Integer internalEndpointHealthCheckPort) {
    this.internalEndpointHealthCheckPort = internalEndpointHealthCheckPort;
  }


  public UpdateApiGatewaySettingsParam internalEndpointHealthCheckProtocol(String internalEndpointHealthCheckProtocol) {
    this.internalEndpointHealthCheckProtocol = internalEndpointHealthCheckProtocol;
    return this;
  }

   /**
   * The protocol to be used for health checks on the internal endpoint.
   * @return internalEndpointHealthCheckProtocol
  **/
  @javax.annotation.Nullable
  public String getInternalEndpointHealthCheckProtocol() {
    return internalEndpointHealthCheckProtocol;
  }

  public void setInternalEndpointHealthCheckProtocol(String internalEndpointHealthCheckProtocol) {
    this.internalEndpointHealthCheckProtocol = internalEndpointHealthCheckProtocol;
  }


  public UpdateApiGatewaySettingsParam internalEndpointHealthStatusCodes(String internalEndpointHealthStatusCodes) {
    this.internalEndpointHealthStatusCodes = internalEndpointHealthStatusCodes;
    return this;
  }

   /**
   * The status codes to be used for health checks on the internal endpoint.
   * @return internalEndpointHealthStatusCodes
  **/
  @javax.annotation.Nullable
  public String getInternalEndpointHealthStatusCodes() {
    return internalEndpointHealthStatusCodes;
  }

  public void setInternalEndpointHealthStatusCodes(String internalEndpointHealthStatusCodes) {
    this.internalEndpointHealthStatusCodes = internalEndpointHealthStatusCodes;
  }


  public UpdateApiGatewaySettingsParam saasSubnetIds(List<String> saasSubnetIds) {
    this.saasSubnetIds = saasSubnetIds;
    return this;
  }

  public UpdateApiGatewaySettingsParam addSaasSubnetIdsItem(String saasSubnetIdsItem) {
    if (this.saasSubnetIds == null) {
      this.saasSubnetIds = new ArrayList<>();
    }
    this.saasSubnetIds.add(saasSubnetIdsItem);
    return this;
  }

   /**
   * Subnet IDs for SaaS
   * @return saasSubnetIds
  **/
  @javax.annotation.Nullable
  public List<String> getSaasSubnetIds() {
    return saasSubnetIds;
  }

  public void setSaasSubnetIds(List<String> saasSubnetIds) {
    this.saasSubnetIds = saasSubnetIds;
  }


  public UpdateApiGatewaySettingsParam saasVpcId(String saasVpcId) {
    this.saasVpcId = saasVpcId;
    return this;
  }

   /**
   * VPC ID for SaaS
   * @return saasVpcId
  **/
  @javax.annotation.Nullable
  public String getSaasVpcId() {
    return saasVpcId;
  }

  public void setSaasVpcId(String saasVpcId) {
    this.saasVpcId = saasVpcId;
  }


  public UpdateApiGatewaySettingsParam domainName(String domainName) {
    this.domainName = domainName;
    return this;
  }

   /**
   * Domain Name
   * @return domainName
  **/
  @javax.annotation.Nullable
  public String getDomainName() {
    return domainName;
  }

  public void setDomainName(String domainName) {
    this.domainName = domainName;
  }


  public UpdateApiGatewaySettingsParam saasAlbArn(String saasAlbArn) {
    this.saasAlbArn = saasAlbArn;
    return this;
  }

   /**
   * SaaS Application Load Balancer ARN
   * @return saasAlbArn
  **/
  @javax.annotation.Nullable
  public String getSaasAlbArn() {
    return saasAlbArn;
  }

  public void setSaasAlbArn(String saasAlbArn) {
    this.saasAlbArn = saasAlbArn;
  }


  public UpdateApiGatewaySettingsParam endpointSettingsList(List<EndpointSettings> endpointSettingsList) {
    this.endpointSettingsList = endpointSettingsList;
    return this;
  }

  public UpdateApiGatewaySettingsParam addEndpointSettingsListItem(EndpointSettings endpointSettingsListItem) {
    if (this.endpointSettingsList == null) {
      this.endpointSettingsList = new ArrayList<>();
    }
    this.endpointSettingsList.add(endpointSettingsListItem);
    return this;
  }

   /**
   * Endpoint Settings List
   * @return endpointSettingsList
  **/
  @javax.annotation.Nullable
  public List<EndpointSettings> getEndpointSettingsList() {
    return endpointSettingsList;
  }

  public void setEndpointSettingsList(List<EndpointSettings> endpointSettingsList) {
    this.endpointSettingsList = endpointSettingsList;
  }


  public UpdateApiGatewaySettingsParam tenantRoutingType(TenantRoutingType tenantRoutingType) {
    this.tenantRoutingType = tenantRoutingType;
    return this;
  }

   /**
   * Get tenantRoutingType
   * @return tenantRoutingType
  **/
  @javax.annotation.Nullable
  public TenantRoutingType getTenantRoutingType() {
    return tenantRoutingType;
  }

  public void setTenantRoutingType(TenantRoutingType tenantRoutingType) {
    this.tenantRoutingType = tenantRoutingType;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the UpdateApiGatewaySettingsParam instance itself
   */
  public UpdateApiGatewaySettingsParam putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateApiGatewaySettingsParam updateApiGatewaySettingsParam = (UpdateApiGatewaySettingsParam) o;
    return Objects.equals(this.roleArn, updateApiGatewaySettingsParam.roleArn) &&
        Objects.equals(this.roleExternalId, updateApiGatewaySettingsParam.roleExternalId) &&
        Objects.equals(this.internalEndpointHealthCheckPath, updateApiGatewaySettingsParam.internalEndpointHealthCheckPath) &&
        Objects.equals(this.internalEndpointHealthCheckPort, updateApiGatewaySettingsParam.internalEndpointHealthCheckPort) &&
        Objects.equals(this.internalEndpointHealthCheckProtocol, updateApiGatewaySettingsParam.internalEndpointHealthCheckProtocol) &&
        Objects.equals(this.internalEndpointHealthStatusCodes, updateApiGatewaySettingsParam.internalEndpointHealthStatusCodes) &&
        Objects.equals(this.saasSubnetIds, updateApiGatewaySettingsParam.saasSubnetIds) &&
        Objects.equals(this.saasVpcId, updateApiGatewaySettingsParam.saasVpcId) &&
        Objects.equals(this.domainName, updateApiGatewaySettingsParam.domainName) &&
        Objects.equals(this.saasAlbArn, updateApiGatewaySettingsParam.saasAlbArn) &&
        Objects.equals(this.endpointSettingsList, updateApiGatewaySettingsParam.endpointSettingsList) &&
        Objects.equals(this.tenantRoutingType, updateApiGatewaySettingsParam.tenantRoutingType)&&
        Objects.equals(this.additionalProperties, updateApiGatewaySettingsParam.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(roleArn, roleExternalId, internalEndpointHealthCheckPath, internalEndpointHealthCheckPort, internalEndpointHealthCheckProtocol, internalEndpointHealthStatusCodes, saasSubnetIds, saasVpcId, domainName, saasAlbArn, endpointSettingsList, tenantRoutingType, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateApiGatewaySettingsParam {\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    roleExternalId: ").append(toIndentedString(roleExternalId)).append("\n");
    sb.append("    internalEndpointHealthCheckPath: ").append(toIndentedString(internalEndpointHealthCheckPath)).append("\n");
    sb.append("    internalEndpointHealthCheckPort: ").append(toIndentedString(internalEndpointHealthCheckPort)).append("\n");
    sb.append("    internalEndpointHealthCheckProtocol: ").append(toIndentedString(internalEndpointHealthCheckProtocol)).append("\n");
    sb.append("    internalEndpointHealthStatusCodes: ").append(toIndentedString(internalEndpointHealthStatusCodes)).append("\n");
    sb.append("    saasSubnetIds: ").append(toIndentedString(saasSubnetIds)).append("\n");
    sb.append("    saasVpcId: ").append(toIndentedString(saasVpcId)).append("\n");
    sb.append("    domainName: ").append(toIndentedString(domainName)).append("\n");
    sb.append("    saasAlbArn: ").append(toIndentedString(saasAlbArn)).append("\n");
    sb.append("    endpointSettingsList: ").append(toIndentedString(endpointSettingsList)).append("\n");
    sb.append("    tenantRoutingType: ").append(toIndentedString(tenantRoutingType)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("role_arn");
    openapiFields.add("role_external_id");
    openapiFields.add("internal_endpoint_health_check_path");
    openapiFields.add("internal_endpoint_health_check_port");
    openapiFields.add("internal_endpoint_health_check_protocol");
    openapiFields.add("internal_endpoint_health_status_codes");
    openapiFields.add("saas_subnet_ids");
    openapiFields.add("saas_vpc_id");
    openapiFields.add("domain_name");
    openapiFields.add("saas_alb_arn");
    openapiFields.add("endpoint_settings_list");
    openapiFields.add("tenant_routing_type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to UpdateApiGatewaySettingsParam
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateApiGatewaySettingsParam.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateApiGatewaySettingsParam is not found in the empty JSON string", UpdateApiGatewaySettingsParam.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("role_arn") != null && !jsonObj.get("role_arn").isJsonNull()) && !jsonObj.get("role_arn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `role_arn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("role_arn").toString()));
      }
      if ((jsonObj.get("role_external_id") != null && !jsonObj.get("role_external_id").isJsonNull()) && !jsonObj.get("role_external_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `role_external_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("role_external_id").toString()));
      }
      if ((jsonObj.get("internal_endpoint_health_check_path") != null && !jsonObj.get("internal_endpoint_health_check_path").isJsonNull()) && !jsonObj.get("internal_endpoint_health_check_path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `internal_endpoint_health_check_path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("internal_endpoint_health_check_path").toString()));
      }
      if ((jsonObj.get("internal_endpoint_health_check_protocol") != null && !jsonObj.get("internal_endpoint_health_check_protocol").isJsonNull()) && !jsonObj.get("internal_endpoint_health_check_protocol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `internal_endpoint_health_check_protocol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("internal_endpoint_health_check_protocol").toString()));
      }
      if ((jsonObj.get("internal_endpoint_health_status_codes") != null && !jsonObj.get("internal_endpoint_health_status_codes").isJsonNull()) && !jsonObj.get("internal_endpoint_health_status_codes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `internal_endpoint_health_status_codes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("internal_endpoint_health_status_codes").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("saas_subnet_ids") != null && !jsonObj.get("saas_subnet_ids").isJsonNull() && !jsonObj.get("saas_subnet_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `saas_subnet_ids` to be an array in the JSON string but got `%s`", jsonObj.get("saas_subnet_ids").toString()));
      }
      if ((jsonObj.get("saas_vpc_id") != null && !jsonObj.get("saas_vpc_id").isJsonNull()) && !jsonObj.get("saas_vpc_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `saas_vpc_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("saas_vpc_id").toString()));
      }
      if ((jsonObj.get("domain_name") != null && !jsonObj.get("domain_name").isJsonNull()) && !jsonObj.get("domain_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `domain_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("domain_name").toString()));
      }
      if ((jsonObj.get("saas_alb_arn") != null && !jsonObj.get("saas_alb_arn").isJsonNull()) && !jsonObj.get("saas_alb_arn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `saas_alb_arn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("saas_alb_arn").toString()));
      }
      if (jsonObj.get("endpoint_settings_list") != null && !jsonObj.get("endpoint_settings_list").isJsonNull()) {
        JsonArray jsonArrayendpointSettingsList = jsonObj.getAsJsonArray("endpoint_settings_list");
        if (jsonArrayendpointSettingsList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("endpoint_settings_list").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `endpoint_settings_list` to be an array in the JSON string but got `%s`", jsonObj.get("endpoint_settings_list").toString()));
          }

          // validate the optional field `endpoint_settings_list` (array)
          for (int i = 0; i < jsonArrayendpointSettingsList.size(); i++) {
            EndpointSettings.validateJsonElement(jsonArrayendpointSettingsList.get(i));
          };
        }
      }
      // validate the optional field `tenant_routing_type`
      if (jsonObj.get("tenant_routing_type") != null && !jsonObj.get("tenant_routing_type").isJsonNull()) {
        TenantRoutingType.validateJsonElement(jsonObj.get("tenant_routing_type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateApiGatewaySettingsParam.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateApiGatewaySettingsParam' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateApiGatewaySettingsParam> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateApiGatewaySettingsParam.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateApiGatewaySettingsParam>() {
           @Override
           public void write(JsonWriter out, UpdateApiGatewaySettingsParam value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateApiGatewaySettingsParam read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             UpdateApiGatewaySettingsParam instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UpdateApiGatewaySettingsParam given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UpdateApiGatewaySettingsParam
  * @throws IOException if the JSON string is invalid with respect to UpdateApiGatewaySettingsParam
  */
  public static UpdateApiGatewaySettingsParam fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateApiGatewaySettingsParam.class);
  }

 /**
  * Convert an instance of UpdateApiGatewaySettingsParam to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

