/*
 * SaaSus Smart API Gateway API Schema
 * SaaSus Smart API Gateway API Schema
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package saasus.sdk.apigateway.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import saasus.sdk.apigateway.models.DnsRecord;
import saasus.sdk.apigateway.models.EndpointSettings;
import saasus.sdk.apigateway.models.TenantRoutingType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import saasus.sdk.apigateway.JSON;

/**
 * ApiGatewaySettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-29T19:09:17.011671667Z[Etc/UTC]")
public class ApiGatewaySettings {
  public static final String SERIALIZED_NAME_GENERATED_FILE_STATUS = "generated_file_status";
  @SerializedName(SERIALIZED_NAME_GENERATED_FILE_STATUS)
  private String generatedFileStatus;

  public static final String SERIALIZED_NAME_INTERNAL_ENDPOINT_OPENAPI_DEFINITION_FILE_DOWNLOAD_URL = "internal_endpoint_openapi_definition_file_download_url";
  @SerializedName(SERIALIZED_NAME_INTERNAL_ENDPOINT_OPENAPI_DEFINITION_FILE_DOWNLOAD_URL)
  private String internalEndpointOpenapiDefinitionFileDownloadUrl;

  public static final String SERIALIZED_NAME_INTERNAL_ENDPOINT_MAPPING_FILE_DOWNLOAD_URL = "internal_endpoint_mapping_file_download_url";
  @SerializedName(SERIALIZED_NAME_INTERNAL_ENDPOINT_MAPPING_FILE_DOWNLOAD_URL)
  private String internalEndpointMappingFileDownloadUrl;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_ROLE_ARN = "role_arn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_ROLE_EXTERNAL_ID = "role_external_id";
  @SerializedName(SERIALIZED_NAME_ROLE_EXTERNAL_ID)
  private String roleExternalId;

  public static final String SERIALIZED_NAME_INTERNAL_ENDPOINT_HEALTH_CHECK_PATH = "internal_endpoint_health_check_path";
  @SerializedName(SERIALIZED_NAME_INTERNAL_ENDPOINT_HEALTH_CHECK_PATH)
  private String internalEndpointHealthCheckPath;

  public static final String SERIALIZED_NAME_INTERNAL_ENDPOINT_HEALTH_CHECK_PORT = "internal_endpoint_health_check_port";
  @SerializedName(SERIALIZED_NAME_INTERNAL_ENDPOINT_HEALTH_CHECK_PORT)
  private Integer internalEndpointHealthCheckPort;

  public static final String SERIALIZED_NAME_INTERNAL_ENDPOINT_HEALTH_CHECK_PROTOCOL = "internal_endpoint_health_check_protocol";
  @SerializedName(SERIALIZED_NAME_INTERNAL_ENDPOINT_HEALTH_CHECK_PROTOCOL)
  private String internalEndpointHealthCheckProtocol;

  public static final String SERIALIZED_NAME_INTERNAL_ENDPOINT_HEALTH_STATUS_CODES = "internal_endpoint_health_status_codes";
  @SerializedName(SERIALIZED_NAME_INTERNAL_ENDPOINT_HEALTH_STATUS_CODES)
  private String internalEndpointHealthStatusCodes;

  public static final String SERIALIZED_NAME_SAAS_SUBNET_IDS = "saas_subnet_ids";
  @SerializedName(SERIALIZED_NAME_SAAS_SUBNET_IDS)
  private List<String> saasSubnetIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_SAAS_VPC_ID = "saas_vpc_id";
  @SerializedName(SERIALIZED_NAME_SAAS_VPC_ID)
  private String saasVpcId;

  public static final String SERIALIZED_NAME_DOMAIN_NAME = "domain_name";
  @SerializedName(SERIALIZED_NAME_DOMAIN_NAME)
  private String domainName;

  public static final String SERIALIZED_NAME_IS_DNS_VALIDATED = "is_dns_validated";
  @SerializedName(SERIALIZED_NAME_IS_DNS_VALIDATED)
  private Boolean isDnsValidated;

  public static final String SERIALIZED_NAME_CERTIFICATE_DNS_RECORD = "certificate_dns_record";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_DNS_RECORD)
  private DnsRecord certificateDnsRecord;

  public static final String SERIALIZED_NAME_CLOUD_FRONT_DNS_RECORD = "cloud_front_dns_record";
  @SerializedName(SERIALIZED_NAME_CLOUD_FRONT_DNS_RECORD)
  private DnsRecord cloudFrontDnsRecord;

  public static final String SERIALIZED_NAME_VPC_ENDPOINT_DNS_RECORD = "vpc_endpoint_dns_record";
  @SerializedName(SERIALIZED_NAME_VPC_ENDPOINT_DNS_RECORD)
  private DnsRecord vpcEndpointDnsRecord;

  public static final String SERIALIZED_NAME_DEFAULT_DOMAIN_NAME = "default_domain_name";
  @SerializedName(SERIALIZED_NAME_DEFAULT_DOMAIN_NAME)
  private String defaultDomainName;

  public static final String SERIALIZED_NAME_SAAS_ALB_ARN = "saas_alb_arn";
  @SerializedName(SERIALIZED_NAME_SAAS_ALB_ARN)
  private String saasAlbArn;

  public static final String SERIALIZED_NAME_REST_API_ENDPOINT = "rest_api_endpoint";
  @SerializedName(SERIALIZED_NAME_REST_API_ENDPOINT)
  private String restApiEndpoint;

  public static final String SERIALIZED_NAME_ENDPOINT_SETTINGS_LIST = "endpoint_settings_list";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_SETTINGS_LIST)
  private List<EndpointSettings> endpointSettingsList = new ArrayList<>();

  public static final String SERIALIZED_NAME_TENANT_ROUTING_TYPE = "tenant_routing_type";
  @SerializedName(SERIALIZED_NAME_TENANT_ROUTING_TYPE)
  private TenantRoutingType tenantRoutingType;

  public static final String SERIALIZED_NAME_DOCS_CLOUD_FRONT_FQDN = "docs_cloud_front_fqdn";
  @SerializedName(SERIALIZED_NAME_DOCS_CLOUD_FRONT_FQDN)
  private String docsCloudFrontFqdn;

  public ApiGatewaySettings() {
  }

  public ApiGatewaySettings generatedFileStatus(String generatedFileStatus) {
    this.generatedFileStatus = generatedFileStatus;
    return this;
  }

   /**
   * Status of automatically generated files
   * @return generatedFileStatus
  **/
  @javax.annotation.Nonnull
  public String getGeneratedFileStatus() {
    return generatedFileStatus;
  }

  public void setGeneratedFileStatus(String generatedFileStatus) {
    this.generatedFileStatus = generatedFileStatus;
  }


  public ApiGatewaySettings internalEndpointOpenapiDefinitionFileDownloadUrl(String internalEndpointOpenapiDefinitionFileDownloadUrl) {
    this.internalEndpointOpenapiDefinitionFileDownloadUrl = internalEndpointOpenapiDefinitionFileDownloadUrl;
    return this;
  }

   /**
   * URL to download the auto-generated openapi definition file, which will be used to build the API Gateway.
   * @return internalEndpointOpenapiDefinitionFileDownloadUrl
  **/
  @javax.annotation.Nonnull
  public String getInternalEndpointOpenapiDefinitionFileDownloadUrl() {
    return internalEndpointOpenapiDefinitionFileDownloadUrl;
  }

  public void setInternalEndpointOpenapiDefinitionFileDownloadUrl(String internalEndpointOpenapiDefinitionFileDownloadUrl) {
    this.internalEndpointOpenapiDefinitionFileDownloadUrl = internalEndpointOpenapiDefinitionFileDownloadUrl;
  }


  public ApiGatewaySettings internalEndpointMappingFileDownloadUrl(String internalEndpointMappingFileDownloadUrl) {
    this.internalEndpointMappingFileDownloadUrl = internalEndpointMappingFileDownloadUrl;
    return this;
  }

   /**
   * The download URL for the auto-generated internal endpoint mapping file, which will be used to build the API Gateway.
   * @return internalEndpointMappingFileDownloadUrl
  **/
  @javax.annotation.Nonnull
  public String getInternalEndpointMappingFileDownloadUrl() {
    return internalEndpointMappingFileDownloadUrl;
  }

  public void setInternalEndpointMappingFileDownloadUrl(String internalEndpointMappingFileDownloadUrl) {
    this.internalEndpointMappingFileDownloadUrl = internalEndpointMappingFileDownloadUrl;
  }


  public ApiGatewaySettings status(String status) {
    this.status = status;
    return this;
  }

   /**
   * API Gateway creation status
   * @return status
  **/
  @javax.annotation.Nonnull
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public ApiGatewaySettings roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

   /**
   * ARN of the role for SaaSus Platform to AssumeRole
   * @return roleArn
  **/
  @javax.annotation.Nonnull
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public ApiGatewaySettings roleExternalId(String roleExternalId) {
    this.roleExternalId = roleExternalId;
    return this;
  }

   /**
   * External id used by SaaSus when AssumeRole to operate SaaS
   * @return roleExternalId
  **/
  @javax.annotation.Nonnull
  public String getRoleExternalId() {
    return roleExternalId;
  }

  public void setRoleExternalId(String roleExternalId) {
    this.roleExternalId = roleExternalId;
  }


  public ApiGatewaySettings internalEndpointHealthCheckPath(String internalEndpointHealthCheckPath) {
    this.internalEndpointHealthCheckPath = internalEndpointHealthCheckPath;
    return this;
  }

   /**
   * The path to be used for health checks on the internal endpoint.
   * @return internalEndpointHealthCheckPath
  **/
  @javax.annotation.Nonnull
  public String getInternalEndpointHealthCheckPath() {
    return internalEndpointHealthCheckPath;
  }

  public void setInternalEndpointHealthCheckPath(String internalEndpointHealthCheckPath) {
    this.internalEndpointHealthCheckPath = internalEndpointHealthCheckPath;
  }


  public ApiGatewaySettings internalEndpointHealthCheckPort(Integer internalEndpointHealthCheckPort) {
    this.internalEndpointHealthCheckPort = internalEndpointHealthCheckPort;
    return this;
  }

   /**
   * The port to be used for health checks on the internal endpoint.
   * @return internalEndpointHealthCheckPort
  **/
  @javax.annotation.Nonnull
  public Integer getInternalEndpointHealthCheckPort() {
    return internalEndpointHealthCheckPort;
  }

  public void setInternalEndpointHealthCheckPort(Integer internalEndpointHealthCheckPort) {
    this.internalEndpointHealthCheckPort = internalEndpointHealthCheckPort;
  }


  public ApiGatewaySettings internalEndpointHealthCheckProtocol(String internalEndpointHealthCheckProtocol) {
    this.internalEndpointHealthCheckProtocol = internalEndpointHealthCheckProtocol;
    return this;
  }

   /**
   * The protocol to be used for health checks on the internal endpoint.
   * @return internalEndpointHealthCheckProtocol
  **/
  @javax.annotation.Nonnull
  public String getInternalEndpointHealthCheckProtocol() {
    return internalEndpointHealthCheckProtocol;
  }

  public void setInternalEndpointHealthCheckProtocol(String internalEndpointHealthCheckProtocol) {
    this.internalEndpointHealthCheckProtocol = internalEndpointHealthCheckProtocol;
  }


  public ApiGatewaySettings internalEndpointHealthStatusCodes(String internalEndpointHealthStatusCodes) {
    this.internalEndpointHealthStatusCodes = internalEndpointHealthStatusCodes;
    return this;
  }

   /**
   * The status codes to be used for health checks on the internal endpoint.
   * @return internalEndpointHealthStatusCodes
  **/
  @javax.annotation.Nonnull
  public String getInternalEndpointHealthStatusCodes() {
    return internalEndpointHealthStatusCodes;
  }

  public void setInternalEndpointHealthStatusCodes(String internalEndpointHealthStatusCodes) {
    this.internalEndpointHealthStatusCodes = internalEndpointHealthStatusCodes;
  }


  public ApiGatewaySettings saasSubnetIds(List<String> saasSubnetIds) {
    this.saasSubnetIds = saasSubnetIds;
    return this;
  }

  public ApiGatewaySettings addSaasSubnetIdsItem(String saasSubnetIdsItem) {
    if (this.saasSubnetIds == null) {
      this.saasSubnetIds = new ArrayList<>();
    }
    this.saasSubnetIds.add(saasSubnetIdsItem);
    return this;
  }

   /**
   * Subnet IDs for SaaS
   * @return saasSubnetIds
  **/
  @javax.annotation.Nonnull
  public List<String> getSaasSubnetIds() {
    return saasSubnetIds;
  }

  public void setSaasSubnetIds(List<String> saasSubnetIds) {
    this.saasSubnetIds = saasSubnetIds;
  }


  public ApiGatewaySettings saasVpcId(String saasVpcId) {
    this.saasVpcId = saasVpcId;
    return this;
  }

   /**
   * VPC ID for SaaS
   * @return saasVpcId
  **/
  @javax.annotation.Nonnull
  public String getSaasVpcId() {
    return saasVpcId;
  }

  public void setSaasVpcId(String saasVpcId) {
    this.saasVpcId = saasVpcId;
  }


  public ApiGatewaySettings domainName(String domainName) {
    this.domainName = domainName;
    return this;
  }

   /**
   * Domain Name
   * @return domainName
  **/
  @javax.annotation.Nonnull
  public String getDomainName() {
    return domainName;
  }

  public void setDomainName(String domainName) {
    this.domainName = domainName;
  }


  public ApiGatewaySettings isDnsValidated(Boolean isDnsValidated) {
    this.isDnsValidated = isDnsValidated;
    return this;
  }

   /**
   * DNS Record Verification Results
   * @return isDnsValidated
  **/
  @javax.annotation.Nonnull
  public Boolean getIsDnsValidated() {
    return isDnsValidated;
  }

  public void setIsDnsValidated(Boolean isDnsValidated) {
    this.isDnsValidated = isDnsValidated;
  }


  public ApiGatewaySettings certificateDnsRecord(DnsRecord certificateDnsRecord) {
    this.certificateDnsRecord = certificateDnsRecord;
    return this;
  }

   /**
   * Get certificateDnsRecord
   * @return certificateDnsRecord
  **/
  @javax.annotation.Nonnull
  public DnsRecord getCertificateDnsRecord() {
    return certificateDnsRecord;
  }

  public void setCertificateDnsRecord(DnsRecord certificateDnsRecord) {
    this.certificateDnsRecord = certificateDnsRecord;
  }


  public ApiGatewaySettings cloudFrontDnsRecord(DnsRecord cloudFrontDnsRecord) {
    this.cloudFrontDnsRecord = cloudFrontDnsRecord;
    return this;
  }

   /**
   * Get cloudFrontDnsRecord
   * @return cloudFrontDnsRecord
  **/
  @javax.annotation.Nonnull
  public DnsRecord getCloudFrontDnsRecord() {
    return cloudFrontDnsRecord;
  }

  public void setCloudFrontDnsRecord(DnsRecord cloudFrontDnsRecord) {
    this.cloudFrontDnsRecord = cloudFrontDnsRecord;
  }


  public ApiGatewaySettings vpcEndpointDnsRecord(DnsRecord vpcEndpointDnsRecord) {
    this.vpcEndpointDnsRecord = vpcEndpointDnsRecord;
    return this;
  }

   /**
   * Get vpcEndpointDnsRecord
   * @return vpcEndpointDnsRecord
  **/
  @javax.annotation.Nonnull
  public DnsRecord getVpcEndpointDnsRecord() {
    return vpcEndpointDnsRecord;
  }

  public void setVpcEndpointDnsRecord(DnsRecord vpcEndpointDnsRecord) {
    this.vpcEndpointDnsRecord = vpcEndpointDnsRecord;
  }


  public ApiGatewaySettings defaultDomainName(String defaultDomainName) {
    this.defaultDomainName = defaultDomainName;
    return this;
  }

   /**
   * Default Domain Name
   * @return defaultDomainName
  **/
  @javax.annotation.Nonnull
  public String getDefaultDomainName() {
    return defaultDomainName;
  }

  public void setDefaultDomainName(String defaultDomainName) {
    this.defaultDomainName = defaultDomainName;
  }


  public ApiGatewaySettings saasAlbArn(String saasAlbArn) {
    this.saasAlbArn = saasAlbArn;
    return this;
  }

   /**
   * SaaS Application Load Balancer ARN
   * @return saasAlbArn
  **/
  @javax.annotation.Nonnull
  public String getSaasAlbArn() {
    return saasAlbArn;
  }

  public void setSaasAlbArn(String saasAlbArn) {
    this.saasAlbArn = saasAlbArn;
  }


  public ApiGatewaySettings restApiEndpoint(String restApiEndpoint) {
    this.restApiEndpoint = restApiEndpoint;
    return this;
  }

   /**
   * The endpoint for the REST API
   * @return restApiEndpoint
  **/
  @javax.annotation.Nonnull
  public String getRestApiEndpoint() {
    return restApiEndpoint;
  }

  public void setRestApiEndpoint(String restApiEndpoint) {
    this.restApiEndpoint = restApiEndpoint;
  }


  public ApiGatewaySettings endpointSettingsList(List<EndpointSettings> endpointSettingsList) {
    this.endpointSettingsList = endpointSettingsList;
    return this;
  }

  public ApiGatewaySettings addEndpointSettingsListItem(EndpointSettings endpointSettingsListItem) {
    if (this.endpointSettingsList == null) {
      this.endpointSettingsList = new ArrayList<>();
    }
    this.endpointSettingsList.add(endpointSettingsListItem);
    return this;
  }

   /**
   * Endpoint Settings List
   * @return endpointSettingsList
  **/
  @javax.annotation.Nonnull
  public List<EndpointSettings> getEndpointSettingsList() {
    return endpointSettingsList;
  }

  public void setEndpointSettingsList(List<EndpointSettings> endpointSettingsList) {
    this.endpointSettingsList = endpointSettingsList;
  }


  public ApiGatewaySettings tenantRoutingType(TenantRoutingType tenantRoutingType) {
    this.tenantRoutingType = tenantRoutingType;
    return this;
  }

   /**
   * Get tenantRoutingType
   * @return tenantRoutingType
  **/
  @javax.annotation.Nonnull
  public TenantRoutingType getTenantRoutingType() {
    return tenantRoutingType;
  }

  public void setTenantRoutingType(TenantRoutingType tenantRoutingType) {
    this.tenantRoutingType = tenantRoutingType;
  }


  public ApiGatewaySettings docsCloudFrontFqdn(String docsCloudFrontFqdn) {
    this.docsCloudFrontFqdn = docsCloudFrontFqdn;
    return this;
  }

   /**
   * CloudFront FQDN for Smart API Gateway Documentation
   * @return docsCloudFrontFqdn
  **/
  @javax.annotation.Nonnull
  public String getDocsCloudFrontFqdn() {
    return docsCloudFrontFqdn;
  }

  public void setDocsCloudFrontFqdn(String docsCloudFrontFqdn) {
    this.docsCloudFrontFqdn = docsCloudFrontFqdn;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ApiGatewaySettings instance itself
   */
  public ApiGatewaySettings putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiGatewaySettings apiGatewaySettings = (ApiGatewaySettings) o;
    return Objects.equals(this.generatedFileStatus, apiGatewaySettings.generatedFileStatus) &&
        Objects.equals(this.internalEndpointOpenapiDefinitionFileDownloadUrl, apiGatewaySettings.internalEndpointOpenapiDefinitionFileDownloadUrl) &&
        Objects.equals(this.internalEndpointMappingFileDownloadUrl, apiGatewaySettings.internalEndpointMappingFileDownloadUrl) &&
        Objects.equals(this.status, apiGatewaySettings.status) &&
        Objects.equals(this.roleArn, apiGatewaySettings.roleArn) &&
        Objects.equals(this.roleExternalId, apiGatewaySettings.roleExternalId) &&
        Objects.equals(this.internalEndpointHealthCheckPath, apiGatewaySettings.internalEndpointHealthCheckPath) &&
        Objects.equals(this.internalEndpointHealthCheckPort, apiGatewaySettings.internalEndpointHealthCheckPort) &&
        Objects.equals(this.internalEndpointHealthCheckProtocol, apiGatewaySettings.internalEndpointHealthCheckProtocol) &&
        Objects.equals(this.internalEndpointHealthStatusCodes, apiGatewaySettings.internalEndpointHealthStatusCodes) &&
        Objects.equals(this.saasSubnetIds, apiGatewaySettings.saasSubnetIds) &&
        Objects.equals(this.saasVpcId, apiGatewaySettings.saasVpcId) &&
        Objects.equals(this.domainName, apiGatewaySettings.domainName) &&
        Objects.equals(this.isDnsValidated, apiGatewaySettings.isDnsValidated) &&
        Objects.equals(this.certificateDnsRecord, apiGatewaySettings.certificateDnsRecord) &&
        Objects.equals(this.cloudFrontDnsRecord, apiGatewaySettings.cloudFrontDnsRecord) &&
        Objects.equals(this.vpcEndpointDnsRecord, apiGatewaySettings.vpcEndpointDnsRecord) &&
        Objects.equals(this.defaultDomainName, apiGatewaySettings.defaultDomainName) &&
        Objects.equals(this.saasAlbArn, apiGatewaySettings.saasAlbArn) &&
        Objects.equals(this.restApiEndpoint, apiGatewaySettings.restApiEndpoint) &&
        Objects.equals(this.endpointSettingsList, apiGatewaySettings.endpointSettingsList) &&
        Objects.equals(this.tenantRoutingType, apiGatewaySettings.tenantRoutingType) &&
        Objects.equals(this.docsCloudFrontFqdn, apiGatewaySettings.docsCloudFrontFqdn)&&
        Objects.equals(this.additionalProperties, apiGatewaySettings.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(generatedFileStatus, internalEndpointOpenapiDefinitionFileDownloadUrl, internalEndpointMappingFileDownloadUrl, status, roleArn, roleExternalId, internalEndpointHealthCheckPath, internalEndpointHealthCheckPort, internalEndpointHealthCheckProtocol, internalEndpointHealthStatusCodes, saasSubnetIds, saasVpcId, domainName, isDnsValidated, certificateDnsRecord, cloudFrontDnsRecord, vpcEndpointDnsRecord, defaultDomainName, saasAlbArn, restApiEndpoint, endpointSettingsList, tenantRoutingType, docsCloudFrontFqdn, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiGatewaySettings {\n");
    sb.append("    generatedFileStatus: ").append(toIndentedString(generatedFileStatus)).append("\n");
    sb.append("    internalEndpointOpenapiDefinitionFileDownloadUrl: ").append(toIndentedString(internalEndpointOpenapiDefinitionFileDownloadUrl)).append("\n");
    sb.append("    internalEndpointMappingFileDownloadUrl: ").append(toIndentedString(internalEndpointMappingFileDownloadUrl)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    roleExternalId: ").append(toIndentedString(roleExternalId)).append("\n");
    sb.append("    internalEndpointHealthCheckPath: ").append(toIndentedString(internalEndpointHealthCheckPath)).append("\n");
    sb.append("    internalEndpointHealthCheckPort: ").append(toIndentedString(internalEndpointHealthCheckPort)).append("\n");
    sb.append("    internalEndpointHealthCheckProtocol: ").append(toIndentedString(internalEndpointHealthCheckProtocol)).append("\n");
    sb.append("    internalEndpointHealthStatusCodes: ").append(toIndentedString(internalEndpointHealthStatusCodes)).append("\n");
    sb.append("    saasSubnetIds: ").append(toIndentedString(saasSubnetIds)).append("\n");
    sb.append("    saasVpcId: ").append(toIndentedString(saasVpcId)).append("\n");
    sb.append("    domainName: ").append(toIndentedString(domainName)).append("\n");
    sb.append("    isDnsValidated: ").append(toIndentedString(isDnsValidated)).append("\n");
    sb.append("    certificateDnsRecord: ").append(toIndentedString(certificateDnsRecord)).append("\n");
    sb.append("    cloudFrontDnsRecord: ").append(toIndentedString(cloudFrontDnsRecord)).append("\n");
    sb.append("    vpcEndpointDnsRecord: ").append(toIndentedString(vpcEndpointDnsRecord)).append("\n");
    sb.append("    defaultDomainName: ").append(toIndentedString(defaultDomainName)).append("\n");
    sb.append("    saasAlbArn: ").append(toIndentedString(saasAlbArn)).append("\n");
    sb.append("    restApiEndpoint: ").append(toIndentedString(restApiEndpoint)).append("\n");
    sb.append("    endpointSettingsList: ").append(toIndentedString(endpointSettingsList)).append("\n");
    sb.append("    tenantRoutingType: ").append(toIndentedString(tenantRoutingType)).append("\n");
    sb.append("    docsCloudFrontFqdn: ").append(toIndentedString(docsCloudFrontFqdn)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("generated_file_status");
    openapiFields.add("internal_endpoint_openapi_definition_file_download_url");
    openapiFields.add("internal_endpoint_mapping_file_download_url");
    openapiFields.add("status");
    openapiFields.add("role_arn");
    openapiFields.add("role_external_id");
    openapiFields.add("internal_endpoint_health_check_path");
    openapiFields.add("internal_endpoint_health_check_port");
    openapiFields.add("internal_endpoint_health_check_protocol");
    openapiFields.add("internal_endpoint_health_status_codes");
    openapiFields.add("saas_subnet_ids");
    openapiFields.add("saas_vpc_id");
    openapiFields.add("domain_name");
    openapiFields.add("is_dns_validated");
    openapiFields.add("certificate_dns_record");
    openapiFields.add("cloud_front_dns_record");
    openapiFields.add("vpc_endpoint_dns_record");
    openapiFields.add("default_domain_name");
    openapiFields.add("saas_alb_arn");
    openapiFields.add("rest_api_endpoint");
    openapiFields.add("endpoint_settings_list");
    openapiFields.add("tenant_routing_type");
    openapiFields.add("docs_cloud_front_fqdn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("generated_file_status");
    openapiRequiredFields.add("internal_endpoint_openapi_definition_file_download_url");
    openapiRequiredFields.add("internal_endpoint_mapping_file_download_url");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("role_arn");
    openapiRequiredFields.add("role_external_id");
    openapiRequiredFields.add("internal_endpoint_health_check_path");
    openapiRequiredFields.add("internal_endpoint_health_check_port");
    openapiRequiredFields.add("internal_endpoint_health_check_protocol");
    openapiRequiredFields.add("internal_endpoint_health_status_codes");
    openapiRequiredFields.add("saas_subnet_ids");
    openapiRequiredFields.add("saas_vpc_id");
    openapiRequiredFields.add("domain_name");
    openapiRequiredFields.add("is_dns_validated");
    openapiRequiredFields.add("certificate_dns_record");
    openapiRequiredFields.add("cloud_front_dns_record");
    openapiRequiredFields.add("vpc_endpoint_dns_record");
    openapiRequiredFields.add("default_domain_name");
    openapiRequiredFields.add("saas_alb_arn");
    openapiRequiredFields.add("rest_api_endpoint");
    openapiRequiredFields.add("endpoint_settings_list");
    openapiRequiredFields.add("tenant_routing_type");
    openapiRequiredFields.add("docs_cloud_front_fqdn");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ApiGatewaySettings
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiGatewaySettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiGatewaySettings is not found in the empty JSON string", ApiGatewaySettings.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ApiGatewaySettings.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("generated_file_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `generated_file_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("generated_file_status").toString()));
      }
      if (!jsonObj.get("internal_endpoint_openapi_definition_file_download_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `internal_endpoint_openapi_definition_file_download_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("internal_endpoint_openapi_definition_file_download_url").toString()));
      }
      if (!jsonObj.get("internal_endpoint_mapping_file_download_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `internal_endpoint_mapping_file_download_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("internal_endpoint_mapping_file_download_url").toString()));
      }
      if (!jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (!jsonObj.get("role_arn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `role_arn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("role_arn").toString()));
      }
      if (!jsonObj.get("role_external_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `role_external_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("role_external_id").toString()));
      }
      if (!jsonObj.get("internal_endpoint_health_check_path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `internal_endpoint_health_check_path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("internal_endpoint_health_check_path").toString()));
      }
      if (!jsonObj.get("internal_endpoint_health_check_protocol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `internal_endpoint_health_check_protocol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("internal_endpoint_health_check_protocol").toString()));
      }
      if (!jsonObj.get("internal_endpoint_health_status_codes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `internal_endpoint_health_status_codes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("internal_endpoint_health_status_codes").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("saas_subnet_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("saas_subnet_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `saas_subnet_ids` to be an array in the JSON string but got `%s`", jsonObj.get("saas_subnet_ids").toString()));
      }
      if (!jsonObj.get("saas_vpc_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `saas_vpc_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("saas_vpc_id").toString()));
      }
      if (!jsonObj.get("domain_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `domain_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("domain_name").toString()));
      }
      // validate the required field `certificate_dns_record`
      DnsRecord.validateJsonElement(jsonObj.get("certificate_dns_record"));
      // validate the required field `cloud_front_dns_record`
      DnsRecord.validateJsonElement(jsonObj.get("cloud_front_dns_record"));
      // validate the required field `vpc_endpoint_dns_record`
      DnsRecord.validateJsonElement(jsonObj.get("vpc_endpoint_dns_record"));
      if (!jsonObj.get("default_domain_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_domain_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_domain_name").toString()));
      }
      if (!jsonObj.get("saas_alb_arn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `saas_alb_arn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("saas_alb_arn").toString()));
      }
      if (!jsonObj.get("rest_api_endpoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rest_api_endpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rest_api_endpoint").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("endpoint_settings_list").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint_settings_list` to be an array in the JSON string but got `%s`", jsonObj.get("endpoint_settings_list").toString()));
      }

      JsonArray jsonArrayendpointSettingsList = jsonObj.getAsJsonArray("endpoint_settings_list");
      // validate the required field `endpoint_settings_list` (array)
      for (int i = 0; i < jsonArrayendpointSettingsList.size(); i++) {
        EndpointSettings.validateJsonElement(jsonArrayendpointSettingsList.get(i));
      };
      // validate the required field `tenant_routing_type`
      TenantRoutingType.validateJsonElement(jsonObj.get("tenant_routing_type"));
      if (!jsonObj.get("docs_cloud_front_fqdn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `docs_cloud_front_fqdn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("docs_cloud_front_fqdn").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiGatewaySettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiGatewaySettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiGatewaySettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiGatewaySettings.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiGatewaySettings>() {
           @Override
           public void write(JsonWriter out, ApiGatewaySettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiGatewaySettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             ApiGatewaySettings instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ApiGatewaySettings given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ApiGatewaySettings
  * @throws IOException if the JSON string is invalid with respect to ApiGatewaySettings
  */
  public static ApiGatewaySettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiGatewaySettings.class);
  }

 /**
  * Convert an instance of ApiGatewaySettings to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

