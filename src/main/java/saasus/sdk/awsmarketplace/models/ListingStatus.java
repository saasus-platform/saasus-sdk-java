/*
 * SaaSus AWS Marketplace API Schema
 * SaaSus AWS Marketplace API Schema
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package saasus.sdk.awsmarketplace.models;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets ListingStatus
 */
@JsonAdapter(ListingStatus.Adapter.class)
public enum ListingStatus {
  
  NO_LISTING("no_listing"),
  
  FIRST_STEP_WORKING("first_step_working"),
  
  FIRST_STEP_COMPLETED("first_step_completed"),
  
  SECOND_STEP_WORKING("second_step_working"),
  
  SECOND_STEP_PLAN_CREATED("second_step_plan_created"),
  
  SECOND_STEP_COMPLETED("second_step_completed"),
  
  THIRD_STEP_WORKING("third_step_working"),
  
  THIRD_STEP_COMPLETED("third_step_completed"),
  
  LIMITED("limited"),
  
  RESTRICTED("restricted"),
  
  PUBLIC("public");

  private String value;

  ListingStatus(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ListingStatus fromValue(String value) {
    for (ListingStatus b : ListingStatus.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ListingStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final ListingStatus enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ListingStatus read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ListingStatus.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ListingStatus.fromValue(value);
  }
}

