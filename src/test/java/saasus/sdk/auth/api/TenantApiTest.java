/*
 * SaaSus Auth API Schema
 * Schema
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package saasus.sdk.auth.api;

import saasus.sdk.auth.ApiException;
import saasus.sdk.auth.models.BillingInfo;
import saasus.sdk.auth.models.Error;
import saasus.sdk.auth.models.PlanReservation;
import saasus.sdk.auth.models.StripeCustomer;
import saasus.sdk.auth.models.Tenant;
import saasus.sdk.auth.models.TenantDetail;
import saasus.sdk.auth.models.TenantIdentityProviders;
import saasus.sdk.auth.models.TenantProps;
import saasus.sdk.auth.models.Tenants;
import saasus.sdk.auth.models.UpdateTenantIdentityProviderParam;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TenantApi
 */
@Disabled
public class TenantApiTest {

    private final TenantApi api = new TenantApi();

    /**
     * Create Tenant
     *
     * Create a tenant managed by the SaaSus Platform. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTenantTest() throws ApiException {
        TenantProps body = null;
        Tenant response = api.createTenant(body);
        // TODO: test validations
    }

    /**
     * Stripe Initial Setting
     *
     * Set Stripe initial information via billing 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTenantAndPricingTest() throws ApiException {
        api.createTenantAndPricing();
        // TODO: test validations
    }

    /**
     * Delete Customer and Product From Stripe
     *
     * Delete customer and product from Stripe. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteStripeTenantAndPricingTest() throws ApiException {
        api.deleteStripeTenantAndPricing();
        // TODO: test validations
    }

    /**
     * Delete Tenant
     *
     * Delete SaaSus Platform tenant. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTenantTest() throws ApiException {
        String tenantId = null;
        api.deleteTenant(tenantId);
        // TODO: test validations
    }

    /**
     * Get Stripe Customer
     *
     * Get the Stripe Customer information associated with the tenant, including their subscriptions. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStripeCustomerTest() throws ApiException {
        String tenantId = null;
        StripeCustomer response = api.getStripeCustomer(tenantId);
        // TODO: test validations
    }

    /**
     * Get Tenant Details
     *
     * Get the details of tenant managed on the SaaSus Platform. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTenantTest() throws ApiException {
        String tenantId = null;
        TenantDetail response = api.getTenant(tenantId);
        // TODO: test validations
    }

    /**
     * Get identity provider per tenant
     *
     * Get sign-in information via external identity provider per tenant. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTenantIdentityProvidersTest() throws ApiException {
        String tenantId = null;
        TenantIdentityProviders response = api.getTenantIdentityProviders(tenantId);
        // TODO: test validations
    }

    /**
     * Get Tenants
     *
     * Get tenants managed by SaaSus Platform. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTenantsTest() throws ApiException {
        Tenants response = api.getTenants();
        // TODO: test validations
    }

    /**
     * Delete all information related to rate plans
     *
     * Delete all information related to rate plans. Delete plans linked to tenants and plan definitions. If you are using the Stripe linkage, the linkage will be removed. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resetPlanTest() throws ApiException {
        api.resetPlan();
        // TODO: test validations
    }

    /**
     * Update Tenant Details
     *
     * Update SaaSus Platform tenant details. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTenantTest() throws ApiException {
        String tenantId = null;
        TenantProps body = null;
        api.updateTenant(tenantId, body);
        // TODO: test validations
    }

    /**
     * Update Tenant Billing Information
     *
     * Update SaaSus Platform tenant billing information. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTenantBillingInfoTest() throws ApiException {
        String tenantId = null;
        BillingInfo body = null;
        api.updateTenantBillingInfo(tenantId, body);
        // TODO: test validations
    }

    /**
     * Update identity provider per tenant
     *
     * Update sign-in information via external identity provider per tenant. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTenantIdentityProviderTest() throws ApiException {
        String tenantId = null;
        UpdateTenantIdentityProviderParam updateTenantIdentityProviderParam = null;
        api.updateTenantIdentityProvider(tenantId, updateTenantIdentityProviderParam);
        // TODO: test validations
    }

    /**
     * Update Tenant Plan Information
     *
     * Update SaaSus Platform tenant plan information. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTenantPlanTest() throws ApiException {
        String tenantId = null;
        PlanReservation body = null;
        api.updateTenantPlan(tenantId, body);
        // TODO: test validations
    }

}
