/*
 * SaaSus Auth API Schema
 * スキーマ
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package saasus.sdk.auth.api;

import saasus.sdk.auth.ApiException;
import saasus.sdk.auth.models.BillingInfo;
import saasus.sdk.auth.models.Error;
import saasus.sdk.auth.models.PlanReservation;
import saasus.sdk.auth.models.Tenant;
import saasus.sdk.auth.models.TenantDetail;
import saasus.sdk.auth.models.TenantIdentityProviders;
import saasus.sdk.auth.models.TenantProps;
import saasus.sdk.auth.models.Tenants;
import saasus.sdk.auth.models.UpdateTenantIdentityProviderParam;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TenantApi
 */
@Disabled
public class TenantApiTest {

    private final TenantApi api = new TenantApi();

    /**
     * テナントを作成(Create Tenant)
     *
     * SaaSus Platform で管理する、テナント情報を作成します。  Create a tenant managed by the SaaSus Platform. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTenantTest() throws ApiException {
        TenantProps body = null;
        Tenant response = api.createTenant(body);
        // TODO: test validations
    }

    /**
     * stripe初期設定(Stripe Initial Setting)
     *
     * billing経由でstripeへ初期情報を設定  Set Stripe initial information via billing 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTenantAndPricingTest() throws ApiException {
        api.createTenantAndPricing();
        // TODO: test validations
    }

    /**
     * stripe上の顧客情報・商品情報の削除(Delete Customer and Product From Stripe)
     *
     * stripe上の顧客情報・商品情報を削除します  Delete customer and product from Stripe. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteStripeTenantAndPricingTest() throws ApiException {
        api.deleteStripeTenantAndPricing();
        // TODO: test validations
    }

    /**
     * テナント情報を削除(Delete Tenant)
     *
     * SaaSus Platform で管理する、テナントの詳細情報を削除します。  Delete SaaSus Platform tenant. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTenantTest() throws ApiException {
        String tenantId = null;
        api.deleteTenant(tenantId);
        // TODO: test validations
    }

    /**
     * テナント情報を取得(Get Tenant Details)
     *
     * SaaSus Platform で管理する、テナントの詳細情報を取得します。  Get the details of tenant managed on the SaaSus Platform. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTenantTest() throws ApiException {
        String tenantId = null;
        TenantDetail response = api.getTenant(tenantId);
        // TODO: test validations
    }

    /**
     * テナント毎の外部IDプロバイダ取得(Get identity provider per tenant)
     *
     * テナント毎の外部IDプロバイダ経由のサインイン情報を取得します。  Get sign-in information via external identity provider per tenant. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTenantIdentityProvidersTest() throws ApiException {
        String tenantId = null;
        TenantIdentityProviders response = api.getTenantIdentityProviders(tenantId);
        // TODO: test validations
    }

    /**
     * テナント一覧取得(Get Tenants)
     *
     * SaaSus Platform で管理する、テナント情報の取得を行います。  Get tenants managed by SaaSus Platform. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTenantsTest() throws ApiException {
        Tenants response = api.getTenants();
        // TODO: test validations
    }

    /**
     * プランに関わる情報を全削除
     *
     * 料金プランに関わる情報を全削除します。 テナントに連携されたプランとプラン定義を削除します。 Stripe連携している場合、連携が解除されます。  Delete all information related to rate plans. Delete plans linked to tenants and plan definitions. If you are using the Stripe linkage, the linkage will be removed. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resetPlanTest() throws ApiException {
        api.resetPlan();
        // TODO: test validations
    }

    /**
     * テナント情報を更新(Update Tenant Details)
     *
     * SaaSus Platform で管理する、テナントの詳細情報を更新します。  Update SaaSus Platform tenant details. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTenantTest() throws ApiException {
        String tenantId = null;
        TenantProps body = null;
        api.updateTenant(tenantId, body);
        // TODO: test validations
    }

    /**
     * テナントの請求先情報を更新(Update Tenant Billing Information)
     *
     * SaaSus Platform で管理しているテナントの請求先情報を更新します。  Update SaaSus Platform tenant billing information. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTenantBillingInfoTest() throws ApiException {
        String tenantId = null;
        BillingInfo body = null;
        api.updateTenantBillingInfo(tenantId, body);
        // TODO: test validations
    }

    /**
     * テナント毎の外部IDプロバイダ更新(Update identity provider per tenant)
     *
     * テナント毎の外部IDプロバイダ経由のサインイン情報を更新します。  Update sign-in information via external identity provider per tenant. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTenantIdentityProviderTest() throws ApiException {
        String tenantId = null;
        UpdateTenantIdentityProviderParam updateTenantIdentityProviderParam = null;
        api.updateTenantIdentityProvider(tenantId, updateTenantIdentityProviderParam);
        // TODO: test validations
    }

    /**
     * テナントのプラン情報を更新(Update Tenant Plan Information)
     *
     * SaaSus Platform で管理しているテナントのプラン情報を更新します。  Update SaaSus Platform tenant plan information. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTenantPlanTest() throws ApiException {
        String tenantId = null;
        PlanReservation body = null;
        api.updateTenantPlan(tenantId, body);
        // TODO: test validations
    }

}
