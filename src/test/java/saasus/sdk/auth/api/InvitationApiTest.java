/*
 * SaaSus Auth API Schema
 * Schema
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package saasus.sdk.auth.api;

import saasus.sdk.auth.ApiException;
import saasus.sdk.auth.models.CreateTenantInvitationParam;
import saasus.sdk.auth.models.Error;
import saasus.sdk.auth.models.Invitation;
import saasus.sdk.auth.models.InvitationValidity;
import saasus.sdk.auth.models.Invitations;
import saasus.sdk.auth.models.ValidateInvitationParam;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InvitationApi
 */
@Disabled
public class InvitationApiTest {

    private final InvitationApi api = new InvitationApi();

    /**
     * Create Tenant Invitation
     *
     * Create an invitation to the tenant. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTenantInvitationTest() throws ApiException {
        String tenantId = null;
        CreateTenantInvitationParam createTenantInvitationParam = null;
        Invitation response = api.createTenantInvitation(tenantId, createTenantInvitationParam);
        // TODO: test validations
    }

    /**
     * Delete Tenant Invitation
     *
     * Delete an invitation for the tenant. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTenantInvitationTest() throws ApiException {
        String tenantId = null;
        String invitationId = null;
        api.deleteTenantInvitation(tenantId, invitationId);
        // TODO: test validations
    }

    /**
     * Get Invitation Validity
     *
     * Get the validity of an invitation to the tenant. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInvitationValidityTest() throws ApiException {
        String invitationId = null;
        InvitationValidity response = api.getInvitationValidity(invitationId);
        // TODO: test validations
    }

    /**
     * Get Tenant Invitation
     *
     * Get invitation information for the tenant. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTenantInvitationTest() throws ApiException {
        String tenantId = null;
        String invitationId = null;
        Invitation response = api.getTenantInvitation(tenantId, invitationId);
        // TODO: test validations
    }

    /**
     * Get Tenant Invitations
     *
     * Get a list of invitations to the tenant. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTenantInvitationsTest() throws ApiException {
        String tenantId = null;
        Invitations response = api.getTenantInvitations(tenantId);
        // TODO: test validations
    }

    /**
     * Validate Invitation
     *
     * Validate an invitation to the tenant. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void validateInvitationTest() throws ApiException {
        String invitationId = null;
        ValidateInvitationParam validateInvitationParam = null;
        api.validateInvitation(invitationId, validateInvitationParam);
        // TODO: test validations
    }

}
