/*
 * SaaSus Auth API Schema
 * Schema
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package saasus.sdk.auth.api;

import saasus.sdk.auth.ApiException;
import saasus.sdk.auth.models.Attribute;
import saasus.sdk.auth.models.Error;
import saasus.sdk.auth.models.UserAttributes;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserAttributeApi
 */
@Disabled
public class UserAttributeApiTest {

    private final UserAttributeApi api = new UserAttributeApi();

    /**
     * Create User Attributes
     *
     * Create additional user attributes to be kept on the SaaSus Platform. For example, you can define items associated with a user, such as user name, birthday, etc. If you don&#39;t want personal information on the SaaS Platform side, personal information can be kept on the SaaS side without user attribute definition. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createUserAttributeTest() throws ApiException {
        Attribute body = null;
        Attribute response = api.createUserAttribute(body);
        // TODO: test validations
    }

    /**
     * Delete User Attribute
     *
     * Delete user attributes kept on the SaaSus Platform. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteUserAttributeTest() throws ApiException {
        String attributeName = null;
        api.deleteUserAttribute(attributeName);
        // TODO: test validations
    }

    /**
     * Get User Attributes
     *
     * Get additional attributes of the user saved in the SaaSus Platform. For example, you can define items associated with a user, such as user name, birthday, etc. If you don&#39;t want personal information on the SaaS Platform side, personal information can be kept on the SaaS side without user attribute definition. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserAttributesTest() throws ApiException {
        UserAttributes response = api.getUserAttributes();
        // TODO: test validations
    }

}
