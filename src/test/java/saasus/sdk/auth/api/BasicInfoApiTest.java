/*
 * SaaSus Auth API Schema
 * スキーマ
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package saasus.sdk.auth.api;

import saasus.sdk.auth.ApiException;
import saasus.sdk.auth.models.BasicInfo;
import saasus.sdk.auth.models.CustomizePageSettings;
import saasus.sdk.auth.models.CustomizePages;
import saasus.sdk.auth.models.Error;
import saasus.sdk.auth.models.NotificationMessages;
import saasus.sdk.auth.models.UpdateBasicInfoParam;
import saasus.sdk.auth.models.UpdateCustomizePageSettingsParam;
import saasus.sdk.auth.models.UpdateCustomizePagesParam;
import saasus.sdk.auth.models.UpdateNotificationMessagesParam;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BasicInfoApi
 */
@Disabled
public class BasicInfoApiTest {

    private final BasicInfoApi api = new BasicInfoApi();

    /**
     * 通知メールテンプレートを取得(Get Notification Email Templates)
     *
     * 各種通知メールテンプレートを取得します。  Get notification email templates. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findNotificationMessagesTest() throws ApiException {
        NotificationMessages response = api.findNotificationMessages();
        // TODO: test validations
    }

    /**
     * 基本設定情報の取得(Get Basic Configurations)
     *
     * SaaS ID を元に設定されているドメイン名と CNAME レコードを取得します。 取得した CNAME レコードを DNS に設定することで、ログイン画面を生成します。  Get the domain name and CNAME record based on the SaaS ID. By setting the CNAME record on the DNS the login screen will be generated. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBasicInfoTest() throws ApiException {
        BasicInfo response = api.getBasicInfo();
        // TODO: test validations
    }

    /**
     * 認証認可基本情報取得(Get Authentication Authorization Basic Information)
     *
     * 認証認可基本情報を取得します。  Get authentication authorization basic information. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCustomizePageSettingsTest() throws ApiException {
        CustomizePageSettings response = api.getCustomizePageSettings();
        // TODO: test validations
    }

    /**
     * 認証系画面設定情報取得(Get Authentication Page Setting)
     *
     * 認証系画面設定情報（新規登録・ログイン・パスワードリセット等）を取得します。  Get the authentication screen setting information (new registration, login, password reset, etc.). 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCustomizePagesTest() throws ApiException {
        CustomizePages response = api.getCustomizePages();
        // TODO: test validations
    }

    /**
     * 基本設定情報の更新(Update Basic Configurations)
     *
     * SaaS ID を元にパラメータとして設定したドメイン名を設定更新します。 CNAME レコードが生成されますので、 DNS に設定して下さい。 既に稼働中の SaaS アプリケーションに設定している場合には、動作に影響があります。  Update the domain name that was set as a parameter based on the SaaS ID. After the CNAME record is generated, set it in your DNS. If it is set on a SaaS application that is already running, it will affect the behavior. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBasicInfoTest() throws ApiException {
        UpdateBasicInfoParam updateBasicInfoParam = null;
        api.updateBasicInfo(updateBasicInfoParam);
        // TODO: test validations
    }

    /**
     * 認証認可基本情報更新(Update Authentication Authorization Basic Information)
     *
     * 認証認可基本情報を更新します。  Update authentication authorization basic information. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCustomizePageSettingsTest() throws ApiException {
        UpdateCustomizePageSettingsParam updateCustomizePageSettingsParam = null;
        api.updateCustomizePageSettings(updateCustomizePageSettingsParam);
        // TODO: test validations
    }

    /**
     * 認証系画面設定情報設定(Authentication Page Setting)
     *
     * 認証系画面設定情報（新規登録・ログイン・パスワードリセット等）を更新します。  Update the authentication page setting information (new registration, login, password reset, etc.). 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCustomizePagesTest() throws ApiException {
        UpdateCustomizePagesParam updateCustomizePagesParam = null;
        api.updateCustomizePages(updateCustomizePagesParam);
        // TODO: test validations
    }

    /**
     * 通知メールテンプレートを更新(Update Notification Email Template)
     *
     * 各種通知メールテンプレート更新します。  Update notification email template. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNotificationMessagesTest() throws ApiException {
        UpdateNotificationMessagesParam updateNotificationMessagesParam = null;
        api.updateNotificationMessages(updateNotificationMessagesParam);
        // TODO: test validations
    }

}
