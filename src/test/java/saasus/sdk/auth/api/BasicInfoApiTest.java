/*
 * SaaSus Auth API Schema
 * Schema
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package saasus.sdk.auth.api;

import saasus.sdk.auth.ApiException;
import saasus.sdk.auth.models.BasicInfo;
import saasus.sdk.auth.models.CustomizePageSettings;
import saasus.sdk.auth.models.CustomizePages;
import saasus.sdk.auth.models.Error;
import saasus.sdk.auth.models.NotificationMessages;
import saasus.sdk.auth.models.UpdateBasicInfoParam;
import saasus.sdk.auth.models.UpdateCustomizePageSettingsParam;
import saasus.sdk.auth.models.UpdateCustomizePagesParam;
import saasus.sdk.auth.models.UpdateNotificationMessagesParam;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BasicInfoApi
 */
@Disabled
public class BasicInfoApiTest {

    private final BasicInfoApi api = new BasicInfoApi();

    /**
     * Get Notification Email Templates
     *
     * Get notification email templates. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findNotificationMessagesTest() throws ApiException {
        NotificationMessages response = api.findNotificationMessages();
        // TODO: test validations
    }

    /**
     * Get Basic Configurations
     *
     * Get the domain name and CNAME record based on the SaaS ID. By setting the CNAME record on the DNS the login screen will be generated. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBasicInfoTest() throws ApiException {
        BasicInfo response = api.getBasicInfo();
        // TODO: test validations
    }

    /**
     * Get Authentication Authorization Basic Information
     *
     * Get authentication authorization basic information. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCustomizePageSettingsTest() throws ApiException {
        CustomizePageSettings response = api.getCustomizePageSettings();
        // TODO: test validations
    }

    /**
     * Get Authentication Page Setting
     *
     * Get the authentication screen setting information (new registration, login, password reset, etc.). 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCustomizePagesTest() throws ApiException {
        CustomizePages response = api.getCustomizePages();
        // TODO: test validations
    }

    /**
     * Update Basic Configurations
     *
     * Update the domain name that was set as a parameter based on the SaaS ID. After the CNAME record is generated, set it in your DNS. If it is set on a SaaS application that is already running, it will affect the behavior. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBasicInfoTest() throws ApiException {
        UpdateBasicInfoParam updateBasicInfoParam = null;
        api.updateBasicInfo(updateBasicInfoParam);
        // TODO: test validations
    }

    /**
     * Update Authentication Authorization Basic Information
     *
     * Update authentication authorization basic information. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCustomizePageSettingsTest() throws ApiException {
        UpdateCustomizePageSettingsParam updateCustomizePageSettingsParam = null;
        api.updateCustomizePageSettings(updateCustomizePageSettingsParam);
        // TODO: test validations
    }

    /**
     * Authentication Page Setting
     *
     * Update the authentication page setting information (new registration, login, password reset, etc.). 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCustomizePagesTest() throws ApiException {
        UpdateCustomizePagesParam updateCustomizePagesParam = null;
        api.updateCustomizePages(updateCustomizePagesParam);
        // TODO: test validations
    }

    /**
     * Update Notification Email Template
     *
     * Update notification email template. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNotificationMessagesTest() throws ApiException {
        UpdateNotificationMessagesParam updateNotificationMessagesParam = null;
        api.updateNotificationMessages(updateNotificationMessagesParam);
        // TODO: test validations
    }

}
