/*
 * SaaSus AWS Marketplace API Schema
 * SaaSus AWS Marketplace API Schema
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package saasus.sdk.awsmarketplace.api;

import saasus.sdk.awsmarketplace.ApiException;
import saasus.sdk.awsmarketplace.models.CatalogEntityVisibility;
import saasus.sdk.awsmarketplace.models.CloudFormationLaunchStackLink;
import saasus.sdk.awsmarketplace.models.CreateCustomerParam;
import saasus.sdk.awsmarketplace.models.Customer;
import saasus.sdk.awsmarketplace.models.Customers;
import saasus.sdk.awsmarketplace.models.Error;
import saasus.sdk.awsmarketplace.models.GetListingStatusResult;
import saasus.sdk.awsmarketplace.models.Plan;
import saasus.sdk.awsmarketplace.models.Plans;
import saasus.sdk.awsmarketplace.models.SavePlanParam;
import saasus.sdk.awsmarketplace.models.Settings;
import saasus.sdk.awsmarketplace.models.UpdateListingStatusParam;
import saasus.sdk.awsmarketplace.models.UpdateSettingsParam;
import saasus.sdk.awsmarketplace.models.VerifyRegistrationTokenParam;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AwsMarketplaceApi
 */
@Disabled
public class AwsMarketplaceApiTest {

    private final AwsMarketplaceApi api = new AwsMarketplaceApi();

    /**
     * Create customer information to be linked to AWS Marketplace
     *
     * Create customer information to be linked to AWS Marketplace. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCustomerTest() throws ApiException {
        CreateCustomerParam createCustomerParam = null;
        Customer response = api.createCustomer(createCustomerParam);
        // TODO: test validations
    }

    /**
     * Obtain product publication status from AWS Marketplace
     *
     * Retrieve the product&#39;s publication status from AWS Marketplace. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCatalogEntityVisibilityTest() throws ApiException {
        CatalogEntityVisibility response = api.getCatalogEntityVisibility();
        // TODO: test validations
    }

    /**
     * Get the link to create the AWS CloudFormation stack
     *
     * Get the CloudFormation Quick Create link. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCloudFormationLaunchStackLinkTest() throws ApiException {
        CloudFormationLaunchStackLink response = api.getCloudFormationLaunchStackLink();
        // TODO: test validations
    }

    /**
     * Get customer information to be linked to AWS Marketplace
     *
     * Get customer information to be linked to AWS Marketplace. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCustomerTest() throws ApiException {
        String customerIdentifier = null;
        Customer response = api.getCustomer(customerIdentifier);
        // TODO: test validations
    }

    /**
     * Get a list of customer information to be linked to AWS Marketplace
     *
     * Get a list of customer information to be linked to AWS Marketplace. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCustomersTest() throws ApiException {
        List<String> tenantIds = null;
        Customers response = api.getCustomers(tenantIds);
        // TODO: test validations
    }

    /**
     * Get AWS Marketplace Listing Status
     *
     * Get AWS Marketplace Listing Status. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListingStatusTest() throws ApiException {
        GetListingStatusResult response = api.getListingStatus();
        // TODO: test validations
    }

    /**
     * Obtain plan information to link to AWS Marketplace
     *
     * Obtain plan information to link to AWS Marketplace. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPlanByPlanNameTest() throws ApiException {
        String planName = null;
        Plan response = api.getPlanByPlanName(planName);
        // TODO: test validations
    }

    /**
     * Obtain plan information to link to AWS Marketplace
     *
     * Obtain plan information to link to AWS Marketplace. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPlansTest() throws ApiException {
        Plans response = api.getPlans();
        // TODO: test validations
    }

    /**
     * Get AWS Marketplace Settings
     *
     * Get AWS Marketplace Settings. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSettingsTest() throws ApiException {
        Settings response = api.getSettings();
        // TODO: test validations
    }

    /**
     * Save plan information to be linked to AWSMarketplace
     *
     * Save plan information to be linked to AWSMarketplace. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void savePlanTest() throws ApiException {
        SavePlanParam savePlanParam = null;
        api.savePlan(savePlanParam);
        // TODO: test validations
    }

    /**
     * Sync AWS Marketplace customer information to SaaSus
     *
     * Sync AWS Marketplace customer information to SaaSus. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void syncCustomerTest() throws ApiException {
        String customerIdentifier = null;
        api.syncCustomer(customerIdentifier);
        // TODO: test validations
    }

    /**
     * Update AWS Marketplace Listing Status
     *
     * Update AWS Marketplace Listing Status. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateListingStatusTest() throws ApiException {
        UpdateListingStatusParam updateListingStatusParam = null;
        api.updateListingStatus(updateListingStatusParam);
        // TODO: test validations
    }

    /**
     * Update AWS Marketplace Settings
     *
     * Update AWS Marketplace Settings. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSettingsTest() throws ApiException {
        UpdateSettingsParam updateSettingsParam = null;
        api.updateSettings(updateSettingsParam);
        // TODO: test validations
    }

    /**
     * Verify Registration Token
     *
     * Verify Registration Token. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifyRegistrationTokenTest() throws ApiException {
        VerifyRegistrationTokenParam verifyRegistrationTokenParam = null;
        api.verifyRegistrationToken(verifyRegistrationTokenParam);
        // TODO: test validations
    }

}
